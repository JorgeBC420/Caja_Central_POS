# Configuración Nginx para POS con SSL y seguridad
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Configuraciones de seguridad
    server_tokens off;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

    # Configuraciones de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Límites de seguridad
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=pos:10m rate=10r/s;

    # Upstream para aplicación POS
    upstream pos_app {
        server pos-app:8080 max_fails=3 fail_timeout=30s;
    }

    # Upstream para API de facturación
    upstream billing_api {
        server pos-billing-api:8000 max_fails=3 fail_timeout=30s;
    }

    # Servidor HTTPS (Puerto 443)
    server {
        listen 443 ssl http2;
        server_name localhost pos.cajacentral.local;

        # Certificados SSL
        ssl_certificate /etc/nginx/certificates/cert.pem;
        ssl_certificate_key /etc/nginx/certificates/key.pem;

        # Configuraciones SSL seguras
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Proxy para aplicación principal
        location / {
            limit_req zone=pos burst=20 nodelay;
            
            proxy_pass http://pos_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Headers de seguridad
            proxy_set_header X-Frame-Options DENY;
            proxy_set_header X-Content-Type-Options nosniff;
        }

        # Proxy para API de facturación
        location /api/ {
            limit_req zone=pos burst=10 nodelay;
            
            proxy_pass http://billing_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Headers específicos para API
            proxy_set_header Content-Type application/json;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Archivos estáticos (si los hay)
        location /static/ {
            alias /app/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Servidor HTTP (Puerto 80) - Redirect a HTTPS
    server {
        listen 80;
        server_name localhost pos.cajacentral.local;
        
        # Redirect permanente a HTTPS
        return 301 https://$server_name$request_uri;
    }

    # Configuración adicional para desarrollo (opcional)
    server {
        listen 8080;
        server_name dev.pos.cajacentral.local;
        
        # Sin SSL para desarrollo local
        location / {
            proxy_pass http://pos_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
